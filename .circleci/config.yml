version: 2
jobs:
  build:
    docker:
      - image: docker:git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Create Docker volumes
          command: |
            docker create --name input --volume /home/builder/package alpine:3.7 /bin/true
            docker create --name output --volume /packages alpine:3.7 /bin/true
            docker create --name test --volume /home/builder/package --volume /etc/apk/keys --volume /packages alpine:3.7 /bin/true
            docker cp ./APKBUILD input:/home/builder/package
      - run:
          name: Build packages
          command: |
            docker run --env RSA_PRIVATE_KEY="$RSA_PRIVATE_KEY" --env RSA_PRIVATE_KEY_NAME="$CIRCLE_PROJECT_USERNAME.rsa" \
                       --volumes-from input --volumes-from output sgerrand/alpine-abuild:3.7
      - run:
          name: Extract packages
          command: |
            mkdir -p packages
            docker cp output:/packages/builder packages/
      - run:
          name: Copy files
          command: |
            docker cp sgerrand.rsa.pub test:/etc/apk/keys/
            docker cp packages/builder test:/packages/builder
      - run:
          name: Test installing packages
          command: |
            docker run --volumes-from test alpine:3.7 \
              sh -c 'apk add --no-progress --update-cache --upgrade /packages/builder/x86_64/php5-imagick-*.apk'
      - run:
          name: Test PHP module
          command: |
             apk add --no-cache --no-progress php5-cli
             php5 -r '$canvas = new Imagick(); $canvas->newImage(350, 70, "white");'
      - run:
          name: Remove Docker volumes
          command: |
            docker rm input
            docker rm output
            docker rm test
          when: always
      - store_artifacts:
          destination: pkgs
          path: packages
      - persist_to_workspace:
          root: .
          paths:
            - packages
    working_directory: ~/alpine-pkg-php5-imagick
  release-master:
    docker:
      - image: golang:alpine
    steps:
      - attach_workspace:
          at: .
      - run: apk add --no-cache --no-progress git
      - run: go get github.com/tcnksm/ghr
      - run:
          name: Release packages
          command: |
            ghr -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME -prerelease -delete unreleased packages
            ghr -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME -prerelease unreleased packages/builder/x86_64
    working_directory: ~/alpine-pkg-php5-imagick
  release-tag:
    docker:
      - image: golang:alpine
    steps:
      - attach_workspace:
          at: .
      - run: apk add --no-cache --no-progress git
      - run: go get github.com/tcnksm/ghr
      - run:
          name: Release packages
          command: |
            ghr -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME $CIRCLE_TAG packages
            ghr -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME $CIRCLE_TAG packages/builder/x86_64
    working_directory: ~/alpine-pkg-php5-imagick
workflows:
  version: 2
  build-test-release:
    jobs:
      - build
      - release-master:
          requires:
            - build
          filters:
            branches:
              only: master
            tags:
              ignore: /.*/
      - release-tag:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]+(\.[0-9]+){1,2}(\-r\d+)?$/
